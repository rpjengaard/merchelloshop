<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Skybrud.Umbraco.GridData.LeBlender</name>
    </assembly>
    <members>
        <member name="T:Skybrud.Umbraco.GridData.LeBlender.Config.GridEditorLeBlenderConfig">
            <summary>
            Class representing the configuration of a link picker.
            </summary>
        </member>
        <member name="P:Skybrud.Umbraco.GridData.LeBlender.Config.GridEditorLeBlenderConfig.Min">
            <summary>
            Gets the minimum amount of allowed items.
            </summary>
        </member>
        <member name="P:Skybrud.Umbraco.GridData.LeBlender.Config.GridEditorLeBlenderConfig.Max">
            <summary>
            Gets the maximium amount of allowed items.
            </summary>
        </member>
        <member name="P:Skybrud.Umbraco.GridData.LeBlender.Config.GridEditorLeBlenderConfig.RenderInGrid">
            <summary>
            Gets whether the control should be rendred in the grid.
            </summary>
        </member>
        <member name="P:Skybrud.Umbraco.GridData.LeBlender.Config.GridEditorLeBlenderConfig.CachePeriod">
            <summary>
            Gets the cache period of the control. If this property equals <see cref="F:System.TimeSpan.Zero"/>, caching is disabled.
            </summary>
        </member>
        <member name="P:Skybrud.Umbraco.GridData.LeBlender.Config.GridEditorLeBlenderConfig.HasCachePeriod">
            <summary>
            Gets whether caching has been enabled for controls of this type.
            </summary>
        </member>
        <member name="M:Skybrud.Umbraco.GridData.LeBlender.Config.GridEditorLeBlenderConfig.Parse(Skybrud.Umbraco.GridData.GridEditor,Newtonsoft.Json.Linq.JObject)">
            <summary>
            Parses the specified <paramref name="obj"/> into an instance of <see cref="T:Skybrud.Umbraco.GridData.LeBlender.Config.GridEditorLeBlenderConfig"/>.
            </summary>
            <param name="editor">The parent editor.</param>
            <param name="obj">The instance of <see cref="T:Newtonsoft.Json.Linq.JObject"/> to be parsed.</param>
            <returns>An instance of <see cref="T:Skybrud.Umbraco.GridData.LeBlender.Config.GridEditorLeBlenderConfig"/>.</returns>
        </member>
        <member name="T:Skybrud.Umbraco.GridData.LeBlender.Converters.LeBlenderGridConverter">
            <summary>
            Converter for handling the LeBlender editors.
            </summary>
        </member>
        <member name="F:Skybrud.Umbraco.GridData.LeBlender.Converters.LeBlenderGridConverter._isLeBlenderEditor">
            <summary>
            The function that checks whether the editor is an LeBlender editor.
            </summary>
        </member>
        <member name="M:Skybrud.Umbraco.GridData.LeBlender.Converters.LeBlenderGridConverter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Skybrud.Umbraco.GridData.LeBlender.Converters.LeBlenderGridConverter" /> class.
            </summary>
        </member>
        <member name="M:Skybrud.Umbraco.GridData.LeBlender.Converters.LeBlenderGridConverter.#ctor(System.Func{Skybrud.Umbraco.GridData.GridEditor,System.Boolean})">
            <summary>
            Initializes a new instance of the <see cref="T:Skybrud.Umbraco.GridData.LeBlender.Converters.LeBlenderGridConverter" /> class.
            </summary>
            <param name="isLeBlenderEditor">The function that checks whether the editor is an LeBlender editor.</param>
            <exception cref="T:System.ArgumentNullException">isLeBlenderEditor</exception>
        </member>
        <member name="M:Skybrud.Umbraco.GridData.LeBlender.Converters.LeBlenderGridConverter.ConvertControlValue(Skybrud.Umbraco.GridData.GridControl,Newtonsoft.Json.Linq.JToken,Skybrud.Umbraco.GridData.Interfaces.IGridControlValue@)">
            <summary>
            Converts the specified <paramref name="token" /> into an instance of <see cref="T:Skybrud.Umbraco.GridData.Interfaces.IGridControlValue" />.
            </summary>
            <param name="control">A reference to the parent <see cref="T:Skybrud.Umbraco.GridData.GridControl" />.</param>
            <param name="token">The instance of <see cref="T:Newtonsoft.Json.Linq.JToken" /> representing the control value.</param>
            <param name="value">The converted control value.</param>
            <returns><code>true</code> if the converter provided a value; otherwise <code>false</code>.</returns>
        </member>
        <member name="M:Skybrud.Umbraco.GridData.LeBlender.Converters.LeBlenderGridConverter.ConvertEditorConfig(Skybrud.Umbraco.GridData.GridEditor,Newtonsoft.Json.Linq.JToken,Skybrud.Umbraco.GridData.Interfaces.IGridEditorConfig@)">
            <summary>
            Converts the specified <paramref name="token" /> into an instance of <see cref="T:Skybrud.Umbraco.GridData.Interfaces.IGridEditorConfig" />.
            </summary>
            <param name="editor"></param>
            <param name="token">The instance of <see cref="T:Newtonsoft.Json.Linq.JToken" /> representing the editor config.</param>
            <param name="config">The converted editor config.</param>
            <returns><code>true</code> if the converter provided a config value; otherwise <code>false</code>.</returns>
        </member>
        <member name="M:Skybrud.Umbraco.GridData.LeBlender.Converters.LeBlenderGridConverter.GetControlWrapper(Skybrud.Umbraco.GridData.GridControl,Skybrud.Umbraco.GridData.Rendering.GridControlWrapper@)">
            <summary>
            Gets an instance <see cref="T:Skybrud.Umbraco.GridData.Rendering.GridControlWrapper" /> for the specified <paramref name="control" />.
            </summary>
            <param name="control">The control to be wrapped.</param>
            <param name="wrapper">The wrapper.</param>
            <returns><code>true</code> if the converter provided a wrapper; otherwise <code>false</code>.</returns>
        </member>
        <member name="M:Skybrud.Umbraco.GridData.LeBlender.Converters.LeBlenderGridConverter.IsLeBlenderEditor(Skybrud.Umbraco.GridData.GridEditor)">
            <summary>
            Determines whether <paramref name="editor" /> is a LeBlender editor.
            </summary>
            <param name="editor">The editor.</param>
            <returns>
              <code>true</code> if <paramref name="editor" /> is a LeBlender editor; otherwise, <code>false</code>.
            </returns>
            <remarks>
            Checks whether the view starts with <code>/App_Plugins/LeBlender/</code> or the alias starts with <code>LeBlender.</code>.
            </remarks>
        </member>
        <member name="T:Skybrud.Umbraco.GridData.LeBlender.Values.GridControlLeBlenderValue">
            <summary>
            Class representing the value of a LeBlender control.
            </summary>
        </member>
        <member name="P:Skybrud.Umbraco.GridData.LeBlender.Values.GridControlLeBlenderValue.Control">
            <summary>
            Gets a reference to the parent control.
            </summary>
        </member>
        <member name="P:Skybrud.Umbraco.GridData.LeBlender.Values.GridControlLeBlenderValue.LeBlender">
            <summary>
            Gets a reference to the underlying <see cref="T:Lecoati.LeBlender.Extension.Models.LeBlenderModel"/>.
            </summary>
        </member>
        <member name="P:Skybrud.Umbraco.GridData.LeBlender.Values.GridControlLeBlenderValue.IsValid">
            <summary>
            Gets whether the control is valid (alias of <see cref="P:Skybrud.Umbraco.GridData.LeBlender.Values.GridControlLeBlenderValue.HasItems"/>).
            </summary>
        </member>
        <member name="P:Skybrud.Umbraco.GridData.LeBlender.Values.GridControlLeBlenderValue.Items">
            <summary>
            Gets the items from the LeBlender model.
            </summary>
        </member>
        <member name="P:Skybrud.Umbraco.GridData.LeBlender.Values.GridControlLeBlenderValue.HasItems">
            <summary>
            Gets whether the underlying <see cref="T:Lecoati.LeBlender.Extension.Models.LeBlenderModel"/> model has any items.
            </summary>
        </member>
        <member name="M:Skybrud.Umbraco.GridData.LeBlender.Values.GridControlLeBlenderValue.#ctor(Skybrud.Umbraco.GridData.GridControl)">
            <summary>
            Initializes a new instance based on the specified <paramref name="control"/>.
            </summary>
            <param name="control">An instance of <see cref="T:Skybrud.Umbraco.GridData.GridControl"/> representing the control.</param>
        </member>
        <member name="M:Skybrud.Umbraco.GridData.LeBlender.Values.GridControlLeBlenderValue.GetSearchableText">
            <summary>
            Gets the value of the control as a searchable text - eg. to be used in Examine.
            </summary>
            <returns>An instance of <see cref="T:System.String"/> with the value as a searchable text.</returns>
        </member>
        <member name="M:Skybrud.Umbraco.GridData.LeBlender.Values.GridControlLeBlenderValue.Parse(Skybrud.Umbraco.GridData.GridControl)">
            <summary>
            Gets an instance of <see cref="T:Skybrud.Umbraco.GridData.LeBlender.Values.GridControlLeBlenderValue"/> from the specified <paramref name="control"/>.
            </summary>
            <param name="control">The parent control.</param>
            <returns>An instance of <see cref="T:Skybrud.Umbraco.GridData.LeBlender.Values.GridControlLeBlenderValue"/>.</returns>
        </member>
    </members>
</doc>
