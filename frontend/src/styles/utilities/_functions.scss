/// Replace `$search` with `$replace` in `$string`
/// @author Hugo Giraudel
/// @param {String} $string - Initial string
/// @param {String} $search - Substring to replace
/// @param {String} $replace ('') - New value
/// @return {String} - Updated string
@function str-replace($string, $search, $replace: '') {
	$index: str-index($string, $search);

	@if $index {
		@return str-slice($string, 1, $index - 1) + $replace + str-replace(str-slice($string, $index + str-length($search)), $search, $replace);
	}

	@return $string;
}

/// Remove the unit of a length
/// @param {Number} $number - Number to remove unit from
/// @return {Number} - Unitless number
@function strip-unit($number) {
	@if type-of($number) == 'number' and not unitless($number) {
		@return $number / ($number * 0 + 1);
	}

	@return $number;
}

// URL encode a string - e.g. html in url(data.., <svg> ...</svg>)
@function url-encode($string) {
	$map: (
	  "%": "%25",
	  "<": "%3C",
	  ">": "%3E",
	  " ": "%20",
	  "!": "%21",
	  "*": "%2A",
	  "'": "%27",
	  '"': "%22",
	  "(": "%28",
	  ")": "%29",
	  ";": "%3B",
	  ":": "%3A",
	  "@": "%40",
	  "&": "%26",
	  "=": "%3D",
	  "+": "%2B",
	  "$": "%24",
	  ",": "%2C",
	  "/": "%2F",
	  "?": "%3F",
	  "#": "%23",
	  "[": "%5B",
	  "]": "%5D"
	);

	$new: $string;

	@each $search, $replace in $map {
	  $new: str-replace($new, $search, $replace);
	}

	@return $new;
}